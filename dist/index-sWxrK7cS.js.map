{"version":3,"file":"index-sWxrK7cS.js","sources":["../node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.1_bufferutil@4.0.9_typescript@5.8.2_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/utils.js","../node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.1_bufferutil@4.0.9_typescript@5.8.2_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/detectProvider.js","../node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.1_bufferutil@4.0.9_typescript@5.8.2_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/solana.js","../node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.1_bufferutil@4.0.9_typescript@5.8.2_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/account.js","../node_modules/.pnpm/@solflare-wallet+metamask-sdk@1.0.3_@solana+web3.js@1.98.1_bufferutil@4.0.9_typescript@5.8.2_utf-8-validate@5.0.10_/node_modules/@solflare-wallet/metamask-sdk/lib/esm/index.js"],"sourcesContent":["export function isLegacyTransactionInstance(transaction) {\n    return transaction.version === undefined;\n}\nexport function serializeTransaction(transaction) {\n    return isLegacyTransactionInstance(transaction)\n        ? transaction.serialize({\n            verifySignatures: false,\n            requireAllSignatures: false\n        })\n        : transaction.serialize();\n}\nexport function serializeTransactionMessage(transaction) {\n    return isLegacyTransactionInstance(transaction)\n        ? transaction.serializeMessage()\n        : transaction.message.serialize();\n}\nexport function addSignature(transaction, publicKey, signature) {\n    if (isLegacyTransactionInstance(transaction)) {\n        transaction.addSignature(publicKey, Buffer.from(signature));\n    }\n    else {\n        const signerPubkeys = transaction.message.staticAccountKeys.slice(0, transaction.message.header.numRequiredSignatures);\n        const signerIndex = signerPubkeys.findIndex((pubkey) => pubkey.equals(publicKey));\n        if (signerIndex >= 0) {\n            transaction.signatures[signerIndex] = signature;\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function isSnapSupported(provider) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            yield provider.request({ method: 'wallet_getSnaps' });\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    });\n}\nexport function detectProvider() {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const provider = window.ethereum;\n            if (!provider) {\n                return null;\n            }\n            if (provider.providers && Array.isArray(provider.providers)) {\n                const providers = provider.providers;\n                for (const provider of providers) {\n                    if (yield isSnapSupported(provider)) {\n                        return provider;\n                    }\n                }\n            }\n            if (provider.detected && Array.isArray(provider.detected)) {\n                const providers = provider.detected;\n                for (const provider of providers) {\n                    if (yield isSnapSupported(provider)) {\n                        return provider;\n                    }\n                }\n            }\n            if (yield isSnapSupported(provider)) {\n                return provider;\n            }\n            return null;\n        }\n        catch (error) {\n            console.error(error);\n            return null;\n        }\n    });\n}\n","// This is copied from @solana/wallet-standard-chains\n/** Solana Mainnet (beta) cluster, e.g. https://api.mainnet-beta.solana.com */\nexport const SOLANA_MAINNET_CHAIN = 'solana:mainnet';\n/** Solana Devnet cluster, e.g. https://api.devnet.solana.com */\nexport const SOLANA_DEVNET_CHAIN = 'solana:devnet';\n/** Solana Testnet cluster, e.g. https://api.testnet.solana.com */\nexport const SOLANA_TESTNET_CHAIN = 'solana:testnet';\n/** Solana Localnet cluster, e.g. http://localhost:8899 */\nexport const SOLANA_LOCALNET_CHAIN = 'solana:localnet';\n/** Array of all Solana clusters */\nexport const SOLANA_CHAINS = [\n    SOLANA_MAINNET_CHAIN,\n    SOLANA_DEVNET_CHAIN,\n    SOLANA_TESTNET_CHAIN,\n    SOLANA_LOCALNET_CHAIN\n];\n/**\n * Check if a chain corresponds with one of the Solana clusters.\n */\nexport function isSolanaChain(chain) {\n    return SOLANA_CHAINS.includes(chain);\n}\n","// This is copied with modification from @wallet-standard/wallet\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _StandardSolflareMetaMaskWalletAccount_address, _StandardSolflareMetaMaskWalletAccount_publicKey, _StandardSolflareMetaMaskWalletAccount_chains, _StandardSolflareMetaMaskWalletAccount_features, _StandardSolflareMetaMaskWalletAccount_label, _StandardSolflareMetaMaskWalletAccount_icon;\nimport { SolanaSignAndSendTransaction, SolanaSignMessage, SolanaSignTransaction } from '@solana/wallet-standard-features';\nimport { SOLANA_CHAINS } from './solana.js';\nconst chains = SOLANA_CHAINS;\nconst features = [SolanaSignAndSendTransaction, SolanaSignTransaction, SolanaSignMessage];\nexport class StandardSolflareMetaMaskWalletAccount {\n    get address() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_address, \"f\");\n    }\n    get publicKey() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_publicKey, \"f\").slice();\n    }\n    get chains() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_chains, \"f\").slice();\n    }\n    get features() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_features, \"f\").slice();\n    }\n    get label() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_label, \"f\");\n    }\n    get icon() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_icon, \"f\");\n    }\n    constructor({ address, publicKey, label, icon }) {\n        _StandardSolflareMetaMaskWalletAccount_address.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_publicKey.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_chains.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_features.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_label.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_icon.set(this, void 0);\n        if (new.target === StandardSolflareMetaMaskWalletAccount) {\n            Object.freeze(this);\n        }\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_address, address, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_publicKey, publicKey, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_chains, chains, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_features, features, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_label, label, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_icon, icon, \"f\");\n    }\n}\n_StandardSolflareMetaMaskWalletAccount_address = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_publicKey = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_chains = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_features = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_label = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_icon = new WeakMap();\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { PublicKey, Transaction, VersionedTransaction } from '@solana/web3.js';\nimport EventEmitter from 'eventemitter3';\nimport bs58 from 'bs58';\nimport { v4 as uuidv4 } from 'uuid';\nimport { isLegacyTransactionInstance, serializeTransaction } from './utils';\nimport { detectProvider } from './detectProvider';\nimport { StandardSolflareMetaMaskWalletAccount } from './standard/account';\nimport { isSolanaChain } from './standard/solana';\nexport * from './types';\nexport * from './standard/account';\nclass SolflareMetaMask extends EventEmitter {\n    constructor(config) {\n        super();\n        this._network = 'mainnet-beta';\n        this._iframeParams = {};\n        this._element = null;\n        this._iframe = null;\n        this._publicKey = null;\n        this._account = null;\n        this._isConnected = false;\n        this._connectHandler = null;\n        this._messageHandlers = {};\n        this._handleEvent = (event) => {\n            var _a, _b;\n            switch (event.type) {\n                case 'connect': {\n                    this._collapseIframe();\n                    if ((_a = event.data) === null || _a === void 0 ? void 0 : _a.publicKey) {\n                        this._publicKey = event.data.publicKey;\n                        this._isConnected = true;\n                        if (this._connectHandler) {\n                            this._connectHandler.resolve();\n                            this._connectHandler = null;\n                        }\n                        this._connected();\n                    }\n                    else {\n                        if (this._connectHandler) {\n                            this._connectHandler.reject();\n                            this._connectHandler = null;\n                        }\n                        this._disconnected();\n                    }\n                    return;\n                }\n                case 'disconnect': {\n                    if (this._connectHandler) {\n                        this._connectHandler.reject();\n                        this._connectHandler = null;\n                    }\n                    this._disconnected();\n                    return;\n                }\n                case 'accountChanged': {\n                    if ((_b = event.data) === null || _b === void 0 ? void 0 : _b.publicKey) {\n                        this._publicKey = event.data.publicKey;\n                        this.emit('accountChanged', this.publicKey);\n                        this._standardConnected();\n                    }\n                    else {\n                        this.emit('accountChanged', undefined);\n                        this._standardDisconnected();\n                    }\n                    return;\n                }\n                default: {\n                    return;\n                }\n            }\n        };\n        this._handleResize = (data) => {\n            if (data.resizeMode === 'full') {\n                if (data.params.mode === 'fullscreen') {\n                    this._expandIframe();\n                }\n                else if (data.params.mode === 'hide') {\n                    this._collapseIframe();\n                }\n            }\n            else if (data.resizeMode === 'coordinates') {\n                this._resizeIframe(data.params);\n            }\n        };\n        this._handleMessage = (event) => {\n            var _a;\n            if (((_a = event.data) === null || _a === void 0 ? void 0 : _a.channel) !== 'solflareIframeToWalletAdapter') {\n                return;\n            }\n            const data = event.data.data || {};\n            if (data.type === 'event') {\n                this._handleEvent(data.event);\n            }\n            else if (data.type === 'resize') {\n                this._handleResize(data);\n            }\n            else if (data.type === 'response') {\n                if (this._messageHandlers[data.id]) {\n                    const { resolve, reject } = this._messageHandlers[data.id];\n                    delete this._messageHandlers[data.id];\n                    if (data.error) {\n                        reject(data.error);\n                    }\n                    else {\n                        resolve(data.result);\n                    }\n                }\n            }\n        };\n        this._removeElement = () => {\n            if (this._element) {\n                this._element.remove();\n                this._element = null;\n            }\n        };\n        this._removeDanglingElements = () => {\n            const elements = document.getElementsByClassName('solflare-metamask-wallet-adapter-iframe');\n            for (const element of elements) {\n                if (element.parentElement) {\n                    element.remove();\n                }\n            }\n        };\n        this._injectElement = () => {\n            this._removeElement();\n            this._removeDanglingElements();\n            const params = Object.assign(Object.assign({}, this._iframeParams), { mm: true, v: 1, cluster: this._network || 'mainnet-beta', origin: window.location.origin || '', title: document.title || '' });\n            const queryString = Object.keys(params)\n                .map((key) => `${key}=${encodeURIComponent(params[key])}`)\n                .join('&');\n            const iframeUrl = `${SolflareMetaMask.IFRAME_URL}?${queryString}`;\n            this._element = document.createElement('div');\n            this._element.className = 'solflare-metamask-wallet-adapter-iframe';\n            this._element.innerHTML = `\n      <iframe src='${iframeUrl}' style='position: fixed; top: 0; bottom: 0; left: 0; right: 0; width: 100%; height: 100%; border: none; border-radius: 0; z-index: 99999; color-scheme: auto;' allowtransparency='true'></iframe>\n    `;\n            document.body.appendChild(this._element);\n            this._iframe = this._element.querySelector('iframe');\n            window.addEventListener('message', this._handleMessage, false);\n        };\n        this._collapseIframe = () => {\n            if (this._iframe) {\n                this._iframe.style.top = '';\n                this._iframe.style.right = '';\n                this._iframe.style.height = '2px';\n                this._iframe.style.width = '2px';\n            }\n        };\n        this._expandIframe = () => {\n            if (this._iframe) {\n                this._iframe.style.top = '0px';\n                this._iframe.style.bottom = '0px';\n                this._iframe.style.left = '0px';\n                this._iframe.style.right = '0px';\n                this._iframe.style.width = '100%';\n                this._iframe.style.height = '100%';\n            }\n        };\n        this._resizeIframe = (params) => {\n            if (!this._iframe) {\n                return;\n            }\n            this._iframe.style.top = isFinite(params.top) ? `${params.top}px` : '';\n            this._iframe.style.bottom = isFinite(params.bottom) ? `${params.bottom}px` : '';\n            this._iframe.style.left = isFinite(params.left) ? `${params.left}px` : '';\n            this._iframe.style.right = isFinite(params.right) ? `${params.right}px` : '';\n            this._iframe.style.width = isFinite(params.width)\n                ? `${params.width}px`\n                : params.width;\n            this._iframe.style.height = isFinite(params.height)\n                ? `${params.height}px`\n                : params.height;\n        };\n        this._sendIframeMessage = (data) => {\n            if (!this.connected || !this.publicKey) {\n                throw new Error('Wallet not connected');\n            }\n            return new Promise((resolve, reject) => {\n                var _a, _b;\n                const messageId = uuidv4();\n                this._messageHandlers[messageId] = { resolve, reject };\n                (_b = (_a = this._iframe) === null || _a === void 0 ? void 0 : _a.contentWindow) === null || _b === void 0 ? void 0 : _b.postMessage({\n                    channel: 'solflareWalletAdapterToIframe',\n                    data: Object.assign({ id: messageId }, data)\n                }, '*');\n            });\n        };\n        this._connected = () => {\n            this._isConnected = true;\n            this.emit('connect', this.publicKey);\n            this._standardConnected();\n        };\n        this._disconnected = () => {\n            this._publicKey = null;\n            this._isConnected = false;\n            window.removeEventListener('message', this._handleMessage, false);\n            this._removeElement();\n            this.emit('disconnect');\n            this._standardDisconnected();\n        };\n        this._standardConnected = () => {\n            if (!this.publicKey) {\n                return;\n            }\n            const address = this.publicKey.toString();\n            if (!this._account || this._account.address !== address) {\n                this._account = new StandardSolflareMetaMaskWalletAccount({\n                    address,\n                    publicKey: this.publicKey.toBytes()\n                });\n                this.emit('standard_change', { accounts: this.standardAccounts });\n            }\n        };\n        this._standardDisconnected = () => {\n            if (this._account) {\n                this._account = null;\n                this.emit('standard_change', { accounts: this.standardAccounts });\n            }\n        };\n        if (config === null || config === void 0 ? void 0 : config.network) {\n            this._network = config === null || config === void 0 ? void 0 : config.network;\n        }\n        if (window.SolflareMetaMaskParams) {\n            this._iframeParams = Object.assign(Object.assign({}, this._iframeParams), window.SolflareMetaMaskParams);\n        }\n        if (config === null || config === void 0 ? void 0 : config.params) {\n            this._iframeParams = Object.assign(Object.assign({}, this._iframeParams), config === null || config === void 0 ? void 0 : config.params);\n        }\n    }\n    get publicKey() {\n        return this._publicKey ? new PublicKey(this._publicKey) : null;\n    }\n    get standardAccount() {\n        return this._account;\n    }\n    get standardAccounts() {\n        return this._account ? [this._account] : [];\n    }\n    get isConnected() {\n        return this._isConnected;\n    }\n    get connected() {\n        return this.isConnected;\n    }\n    get autoApprove() {\n        return false;\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.connected) {\n                return;\n            }\n            this._injectElement();\n            yield new Promise((resolve, reject) => {\n                this._connectHandler = { resolve, reject };\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._sendIframeMessage({\n                method: 'disconnect'\n            });\n            this._disconnected();\n        });\n    }\n    signTransaction(transaction) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected || !this.publicKey) {\n                throw new Error('Wallet not connected');\n            }\n            try {\n                const serializedTransaction = serializeTransaction(transaction);\n                const response = yield this._sendIframeMessage({\n                    method: 'signTransactionV2',\n                    params: {\n                        transaction: bs58.encode(serializedTransaction)\n                    }\n                });\n                const { transaction: signedTransaction } = response;\n                return isLegacyTransactionInstance(transaction) ? Transaction.from(bs58.decode(signedTransaction)) : VersionedTransaction.deserialize(bs58.decode(signedTransaction));\n            }\n            catch (e) {\n                throw new Error(((_a = e === null || e === void 0 ? void 0 : e.toString) === null || _a === void 0 ? void 0 : _a.call(e)) || 'Failed to sign transaction');\n            }\n        });\n    }\n    signAllTransactions(transactions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected || !this.publicKey) {\n                throw new Error('Wallet not connected');\n            }\n            try {\n                const serializedTransactions = transactions.map((transaction) => serializeTransaction(transaction));\n                const { transactions: signedTransactions } = yield this._sendIframeMessage({\n                    method: 'signAllTransactionsV2',\n                    params: {\n                        transactions: serializedTransactions.map((transaction) => bs58.encode(transaction))\n                    }\n                });\n                return signedTransactions.map((signedTransaction, index) => {\n                    return isLegacyTransactionInstance(transactions[index]) ? Transaction.from(bs58.decode(signedTransaction)) : VersionedTransaction.deserialize(bs58.decode(signedTransaction));\n                });\n            }\n            catch (e) {\n                throw new Error(((_a = e === null || e === void 0 ? void 0 : e.toString) === null || _a === void 0 ? void 0 : _a.call(e)) || 'Failed to sign transactions');\n            }\n        });\n    }\n    signAndSendTransaction(transaction, options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected || !this.publicKey) {\n                throw new Error('Wallet not connected');\n            }\n            try {\n                const serializedTransaction = serializeTransaction(transaction);\n                const { signature } = yield this._sendIframeMessage({\n                    method: 'signAndSendTransaction',\n                    params: {\n                        transaction: bs58.encode(serializedTransaction),\n                        options\n                    }\n                });\n                return signature;\n            }\n            catch (e) {\n                throw new Error(((_a = e === null || e === void 0 ? void 0 : e.toString) === null || _a === void 0 ? void 0 : _a.call(e)) || 'Failed to sign and send transaction');\n            }\n        });\n    }\n    signMessage(data, display = 'utf8') {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected || !this.publicKey) {\n                throw new Error('Wallet not connected');\n            }\n            try {\n                const { signature } = yield this._sendIframeMessage({\n                    method: 'signMessage',\n                    params: {\n                        data: bs58.encode(data),\n                        display\n                    }\n                });\n                return Uint8Array.from(bs58.decode(signature));\n            }\n            catch (e) {\n                throw new Error(((_a = e === null || e === void 0 ? void 0 : e.toString) === null || _a === void 0 ? void 0 : _a.call(e)) || 'Failed to sign message');\n            }\n        });\n    }\n    sign(data, display = 'utf8') {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.signMessage(data, display);\n        });\n    }\n    static isSupported() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = yield detectProvider();\n            return !!provider;\n        });\n    }\n    standardSignAndSendTransaction(...inputs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected)\n                throw new Error('not connected');\n            const outputs = [];\n            if (inputs.length === 1) {\n                const { transaction, account, chain, options } = inputs[0];\n                const { minContextSlot, preflightCommitment, skipPreflight, maxRetries } = options || {};\n                if (account !== this._account)\n                    throw new Error('invalid account');\n                if (!isSolanaChain(chain))\n                    throw new Error('invalid chain');\n                const signature = yield this.signAndSendTransaction(VersionedTransaction.deserialize(transaction), {\n                    preflightCommitment,\n                    minContextSlot,\n                    maxRetries,\n                    skipPreflight\n                });\n                outputs.push({ signature: bs58.decode(signature) });\n            }\n            else if (inputs.length > 1) {\n                for (const input of inputs) {\n                    outputs.push(...(yield this.standardSignAndSendTransaction(input)));\n                }\n            }\n            return outputs;\n        });\n    }\n    standardSignTransaction(...inputs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected)\n                throw new Error('not connected');\n            const outputs = [];\n            if (inputs.length === 1) {\n                const { transaction, account, chain } = inputs[0];\n                if (account !== this._account)\n                    throw new Error('invalid account');\n                if (chain && !isSolanaChain(chain))\n                    throw new Error('invalid chain');\n                const signedTransaction = yield this.signTransaction(VersionedTransaction.deserialize(transaction));\n                outputs.push({ signedTransaction: signedTransaction.serialize() });\n            }\n            else if (inputs.length > 1) {\n                let chain;\n                for (const input of inputs) {\n                    if (input.account !== this._account)\n                        throw new Error('invalid account');\n                    if (input.chain) {\n                        if (!isSolanaChain(input.chain))\n                            throw new Error('invalid chain');\n                        if (chain) {\n                            if (input.chain !== chain)\n                                throw new Error('conflicting chain');\n                        }\n                        else {\n                            chain = input.chain;\n                        }\n                    }\n                }\n                const transactions = inputs.map(({ transaction }) => VersionedTransaction.deserialize(transaction));\n                const signedTransactions = yield this.signAllTransactions(transactions);\n                outputs.push(...signedTransactions.map((signedTransaction) => ({\n                    signedTransaction: signedTransaction.serialize()\n                })));\n            }\n            return outputs;\n        });\n    }\n    standardSignMessage(...inputs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected)\n                throw new Error('not connected');\n            const outputs = [];\n            if (inputs.length === 1) {\n                const { message, account } = inputs[0];\n                if (account !== this._account)\n                    throw new Error('invalid account');\n                const signature = yield this.signMessage(message);\n                outputs.push({ signedMessage: message, signature });\n            }\n            else if (inputs.length > 1) {\n                for (const input of inputs) {\n                    outputs.push(...(yield this.standardSignMessage(input)));\n                }\n            }\n            return outputs;\n        });\n    }\n}\nSolflareMetaMask.IFRAME_URL = 'https://widget.solflare.com/';\nexport default SolflareMetaMask;\n"],"names":["isLegacyTransactionInstance","transaction","serializeTransaction","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","reject","fulfilled","step","e","rejected","result","isSnapSupported","provider","detectProvider","providers","error","SOLANA_MAINNET_CHAIN","SOLANA_DEVNET_CHAIN","SOLANA_TESTNET_CHAIN","SOLANA_LOCALNET_CHAIN","SOLANA_CHAINS","isSolanaChain","chain","__classPrivateFieldGet","receiver","state","kind","f","__classPrivateFieldSet","_StandardSolflareMetaMaskWalletAccount_address","_StandardSolflareMetaMaskWalletAccount_publicKey","_StandardSolflareMetaMaskWalletAccount_chains","_StandardSolflareMetaMaskWalletAccount_features","_StandardSolflareMetaMaskWalletAccount_label","_StandardSolflareMetaMaskWalletAccount_icon","chains","features","SolanaSignAndSendTransaction","SolanaSignTransaction","SolanaSignMessage","StandardSolflareMetaMaskWalletAccount","address","publicKey","label","icon","SolflareMetaMask","EventEmitter","config","event","_a","_b","data","elements","element","params","queryString","key","iframeUrl","messageId","uuidv4","PublicKey","serializedTransaction","response","bs58","signedTransaction","Transaction","VersionedTransaction","transactions","serializedTransactions","signedTransactions","index","options","signature","display","inputs","outputs","account","minContextSlot","preflightCommitment","skipPreflight","maxRetries","input","message"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}